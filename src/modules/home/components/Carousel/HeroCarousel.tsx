"use client"

import { useState, useEffect, useRef } from "react"
import AnimatedBackground from "./components/AnimatedBackground"
import ProgressBarCarousel from "./components/ProgressBarCarousel"
import NavigateControlsCarousel from "./components/NavigateControlsCarousel"
import { Clock, Heart, CheckCircle } from "lucide-react"
import MainContentCarousel from "./components/MainContentCarousel/MainContentCarousel"

const slides = [
    {
        id: 1,
        image: "https://images.unsplash.com/photo-1560448204-e02f11c3d0e2?w=1200&h=800&fit=crop&crop=center&auto=format&q=80",
        badge: "üèÜ N·ªÅn t·∫£ng cho thu√™ ph√≤ng tr·ªç #1 Vi·ªát Nam",
        title: "T√¨m ph√≤ng tr·ªç l√Ω t∆∞·ªüng",
        subtitle: "cho cu·ªôc s·ªëng c·ªßa b·∫°n",
        description: "Kh√°m ph√° h√†ng ng√†n ph√≤ng tr·ªç ch·∫•t l∆∞·ª£ng v·ªõi ƒë·∫ßy ƒë·ªß ti·ªán nghi, gi√° c·∫£ h·ª£p l√Ω v√† v·ªã tr√≠ thu·∫≠n ti·ªán.",
        features: [
            { icon: CheckCircle, text: "X√°c th·ª±c 100%", color: "text-green-400" },
            { icon: Heart, text: "10K+ ƒë√°nh gi√° t√≠ch c·ª±c", color: "text-red-400" },
            { icon: Clock, text: "H·ªó tr·ª£ 24/7", color: "text-blue-400" },
        ],
        overlayContent: {
            category: "CƒÉn h·ªô cao c·∫•p",
            title: "Vinhomes Central Park",
            location: "Qu·∫≠n B√¨nh Th·∫°nh, TP.HCM",
            price: "15-25 tri·ªáu/th√°ng",
            rating: 4.8,
            reviews: 234,
            amenities: ["WiFi", "Parking", "Security", "Pool"],
        },
        color: "from-blue-900 via-slate-900 to-gray-900",
    },
    {
        id: 2,
        image: "https://images.unsplash.com/photo-1502672260266-1c1ef2d93688?w=1200&h=800&fit=crop&crop=center&auto=format&q=80",
        badge: "‚ú® CƒÉn h·ªô cao c·∫•p v·ªõi view ƒë·∫πp",
        title: "Kh√¥ng gian s·ªëng",
        subtitle: "hi·ªán ƒë·∫°i & ti·ªán nghi",
        description: "Tr·∫£i nghi·ªám cu·ªôc s·ªëng ƒë·∫≥ng c·∫•p v·ªõi nh·ªØng cƒÉn h·ªô ƒë∆∞·ª£c thi·∫øt k·∫ø hi·ªán ƒë·∫°i, ƒë·∫ßy ƒë·ªß n·ªôi th·∫•t cao c·∫•p.",
        features: [
            { icon: CheckCircle, text: "N·ªôi th·∫•t cao c·∫•p", color: "text-green-400" },
            { icon: Heart, text: "View th√†nh ph·ªë", color: "text-red-400" },
            { icon: Clock, text: "An ninh 24/7", color: "text-blue-400" },
        ],
        overlayContent: {
            category: "Studio hi·ªán ƒë·∫°i",
            title: "Masteri Millennium",
            location: "Qu·∫≠n 4, TP.HCM",
            price: "12-18 tri·ªáu/th√°ng",
            rating: 4.9,
            reviews: 156,
            amenities: ["WiFi", "Gym", "Security", "Garden"],
        },
        color: "from-emerald-900 via-teal-900 to-cyan-900",
    },
    {
        id: 3,
        image: "https://images.unsplash.com/photo-1586023492125-27b2c045efd7?w=1200&h=800&fit=crop&crop=center&auto=format&q=80",
        badge: "üè† Kh√¥ng gian gia ƒë√¨nh ·∫•m c√∫ng",
        title: "Thi·∫øt k·∫ø th√¥ng minh",
        subtitle: "t·ªëi ∆∞u kh√¥ng gian",
        description: "CƒÉn h·ªô ƒë∆∞·ª£c thi·∫øt k·∫ø th√¥ng minh v·ªõi kh√¥ng gian m·ªü, b·∫øp hi·ªán ƒë·∫°i v√† khu v·ª±c sinh ho·∫°t tho·∫£i m√°i.",
        features: [
            { icon: CheckCircle, text: "Thi·∫øt k·∫ø m·ªü", color: "text-green-400" },
            { icon: Heart, text: "B·∫øp hi·ªán ƒë·∫°i", color: "text-red-400" },
            { icon: Clock, text: "Ti·ªán √≠ch ƒë·∫ßy ƒë·ªß", color: "text-blue-400" },
        ],
        overlayContent: {
            category: "CƒÉn h·ªô gia ƒë√¨nh",
            title: "Saigon South Residences",
            location: "Qu·∫≠n 7, TP.HCM",
            price: "20-35 tri·ªáu/th√°ng",
            rating: 4.7,
            reviews: 189,
            amenities: ["WiFi", "Parking", "Playground", "Mall"],
        },
        color: "from-purple-900 via-indigo-900 to-blue-900",
    },
    {
        id: 4,
        image: "https://images.unsplash.com/photo-1564013799919-ab600027ffc6?w=1200&h=800&fit=crop&crop=center&auto=format&q=80",
        badge: "üåÜ CƒÉn h·ªô view th√†nh ph·ªë tuy·ªát ƒë·∫πp",
        title: "Cu·ªôc s·ªëng ƒë·∫≥ng c·∫•p",
        subtitle: "t·∫°i trung t√¢m th√†nh ph·ªë",
        description: "T·∫≠n h∆∞·ªüng cu·ªôc s·ªëng hi·ªán ƒë·∫°i v·ªõi view to√†n c·∫£nh th√†nh ph·ªë, ti·ªán √≠ch ƒë·∫ßy ƒë·ªß v√† d·ªãch v·ª• 5 sao.",
        features: [
            { icon: CheckCircle, text: "View th√†nh ph·ªë", color: "text-green-400" },
            { icon: Heart, text: "Ti·ªán √≠ch cao c·∫•p", color: "text-red-400" },
            { icon: Clock, text: "D·ªãch v·ª• 24/7", color: "text-blue-400" },
        ],
        overlayContent: {
            category: "Penthouse cao c·∫•p",
            title: "Landmark 81 Residences",
            location: "Qu·∫≠n B√¨nh Th·∫°nh, TP.HCM",
            price: "50-80 tri·ªáu/th√°ng",
            rating: 4.9,
            reviews: 89,
            amenities: ["WiFi", "Gym", "Pool", "Spa", "Concierge"],
        },
        color: "from-orange-900 via-red-900 to-pink-900",
    },
    {
        id: 5,
        image: "https://images.unsplash.com/photo-1571896349842-33c89424de2d?w=1200&h=800&fit=crop&crop=center&auto=format&q=80",
        badge: "üè° CƒÉn h·ªô xanh m√°t v·ªõi view s√¥ng",
        title: "Kh√¥ng gian xanh",
        subtitle: "g·∫ßn g≈©i thi√™n nhi√™n",
        description: "CƒÉn h·ªô v·ªõi thi·∫øt k·∫ø xanh, view s√¥ng ƒë·∫πp v√† kh√¥ng gian s·ªëng h√†i h√≤a v·ªõi thi√™n nhi√™n.",
        features: [
            { icon: CheckCircle, text: "View s√¥ng ƒë·∫πp", color: "text-green-400" },
            { icon: Heart, text: "Kh√¥ng gian xanh", color: "text-red-400" },
            { icon: Clock, text: "M√¥i tr∆∞·ªùng trong l√†nh", color: "text-blue-400" },
        ],
        overlayContent: {
            category: "CƒÉn h·ªô view s√¥ng",
            title: "The Manor M·ªπ ƒê√¨nh",
            location: "Qu·∫≠n Nam T·ª´ Li√™m, H√† N·ªôi",
            price: "25-40 tri·ªáu/th√°ng",
            rating: 4.6,
            reviews: 203,
            amenities: ["WiFi", "Garden", "River View", "Security"],
        },
        color: "from-green-900 via-emerald-900 to-teal-900",
    },
    {
        id: 6,
        image: "https://images.unsplash.com/photo-1600596542815-ffad4c1539a9?w=1200&h=800&fit=crop&crop=center&auto=format&q=80",
        badge: "üé® CƒÉn h·ªô thi·∫øt k·∫ø ƒë·ªôc ƒë√°o",
        title: "Phong c√°ch hi·ªán ƒë·∫°i",
        subtitle: "thi·∫øt k·∫ø ƒë·ªôc ƒë√°o",
        description: "CƒÉn h·ªô v·ªõi thi·∫øt k·∫ø n·ªôi th·∫•t hi·ªán ƒë·∫°i, phong c√°ch ƒë·ªôc ƒë√°o v√† kh√¥ng gian s·ªëng s√°ng t·∫°o.",
        features: [
            { icon: CheckCircle, text: "Thi·∫øt k·∫ø ƒë·ªôc ƒë√°o", color: "text-green-400" },
            { icon: Heart, text: "N·ªôi th·∫•t cao c·∫•p", color: "text-red-400" },
            { icon: Clock, text: "Kh√¥ng gian s√°ng t·∫°o", color: "text-blue-400" },
        ],
        overlayContent: {
            category: "CƒÉn h·ªô thi·∫øt k·∫ø",
            title: "The Manor Premium",
            location: "Qu·∫≠n 1, TP.HCM",
            price: "30-45 tri·ªáu/th√°ng",
            rating: 4.8,
            reviews: 167,
            amenities: ["WiFi", "Design Studio", "Art Gallery", "Cafe"],
        },
        color: "from-indigo-900 via-purple-900 to-pink-900",
    },
]

export default function HeroCarousel() {
    const [currentSlide, setCurrentSlide] = useState(0)
    const [isPlaying, setIsPlaying] = useState(true)
    const [isTransitioning, setIsTransitioning] = useState(false)
    const [searchData, setSearchData] = useState({
        location: "",
        priceRange: "",
        roomType: "",
    })
    const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 })
    const containerRef = useRef<HTMLDivElement>(null)

    useEffect(() => {
        if (!isPlaying) return

        const timer = setInterval(() => {
            handleSlideChange((prev) => (prev + 1) % slides.length)
        }, 6000)

        return () => clearInterval(timer)
    }, [isPlaying, currentSlide])

    useEffect(() => {
        const handleMouseMove = (e: MouseEvent) => {
            if (containerRef.current) {
                const rect = containerRef.current.getBoundingClientRect()
                setMousePosition({
                    x: (e.clientX - rect.left) / rect.width,
                    y: (e.clientY - rect.top) / rect.height,
                })
            }
        }

        const container = containerRef.current
        if (container) {
            container.addEventListener("mousemove", handleMouseMove)
            return () => container.removeEventListener("mousemove", handleMouseMove)
        }
    }, [])

    const handleSlideChange = (newSlideOrFunction: number | ((prev: number) => number)) => {
        if (isTransitioning) return

        setIsTransitioning(true)
        const newSlide = typeof newSlideOrFunction === "function" ? newSlideOrFunction(currentSlide) : newSlideOrFunction

        setTimeout(() => {
            setCurrentSlide(newSlide)
            setTimeout(() => {
                setIsTransitioning(false)
            }, 100)
        }, 400)
    }

    const nextSlide = () => handleSlideChange((prev) => (prev + 1) % slides.length)
    const prevSlide = () => handleSlideChange((prev) => (prev - 1 + slides.length) % slides.length)
    const goToSlide = (index: number) => handleSlideChange(index)

    const currentSlideData = slides[currentSlide]

    const handleSearch = () => {
        console.log("Search data:", searchData)
    }

    return (
        <section ref={containerRef} className="relative h-screen overflow-hidden -mt-16 lg:-mt-20">
            {/* Animated Background */}
            <div className="absolute inset-0">
                {slides.map((slide, index) => (
                    <AnimatedBackground
                        key={index}
                        slide={slide}
                        index={index}
                        currentSlide={currentSlide}
                        mousePosition={mousePosition}
                    />
                ))}
            </div>

            {/* Main Content */}
            <MainContentCarousel currentSlideData={currentSlideData} isTransitioning={isTransitioning} mousePosition={mousePosition} />
            {/* Navigation Controls */}
            <NavigateControlsCarousel currentSlide={currentSlide} slides={slides} isTransitioning={isTransitioning} prevSlide={prevSlide} nextSlide={nextSlide} goToSlide={goToSlide} />
            {/* Progress Bar */}
            <ProgressBarCarousel currentSlide={currentSlide} slides={slides} />
        </section>
    )
}
